{"version":3,"sources":["../../../src/@ionic-native/plugins/sms-log/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;GAcG;AASH;IAA4B,0BAAiB;IAA7C;;IAmCA,CAAC;IAjCC;;;;;;OAMG;IAEH,0BAAS,GAAT,UAAU,OAAiB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD;;;OAGG;IAIH,kCAAiB,GAAjB,cAAoC,MAAM,CAAC,CAAC,CAAC;IAE7C;;;OAGG;IAIH,sCAAqB,GAArB,cAAwC,MAAM,CAAC,CAAC,CAAC;IAC5C,iBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAxBA;QADC,OAAO,EAAE;;;;2CAC4C;IAStD;QAHC,OAAO,CAAC;YACP,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;;;;mDAC2C;IAS7C;QAHC,OAAO,CAAC;YACP,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;;;;uDAC+C;IA5BtC,MAAM;QARlB,MAAM,CAAC;YACN,UAAU,EAAE,QAAQ;YACpB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,gBAAgB;YAC3B,IAAI,EAAE,wDAAwD;YAC9D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,MAAM,CAmClB;IAAD,aAAC;CAnCD,AAmCC,CAnC2B,iBAAiB,GAmC5C;SAnCY,MAAM","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name Sms Log\n * @description\n * This plugin access the sms history on a device and that can be filtered\n *\n * @usage\n * ```typescript\n * import { SmsLog } from '@ionic-native/sms-log';\n *\n *\n * constructor(private smsLog: SmsLog) { }\n *\n * ...\n *\n */\n@Plugin({\n  pluginName: 'SmsLog',\n  plugin: 'cordova-plugin-smslog',\n  pluginRef: 'plugins.smsLog',\n  repo: 'https://github.com/creacore-team/cordova-plugin-smslog',\n  platforms: ['Android']\n})\n\nexport class SmsLog extends IonicNativePlugin {\n\n  /**\n   * This function return the sms logs\n   * @param filters {object[]} array of object to filter the query\n   * Object must respect this structure {'name':'...', 'value': '...', 'operator': '=='}\n   * (see https://github.com/creacore-team/cordova-plugin-smslog for more details)\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  getSmsLog(filters: object[]): Promise<any> { return; }\n\n  /**\n   * Check permission\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  hasReadPermission(): Promise<any> { return; }\n\n  /**\n   * Request permission\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  requestReadPermission(): Promise<any> { return; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}